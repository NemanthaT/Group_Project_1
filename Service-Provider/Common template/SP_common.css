* {
    margin: 0; /*removes any default space (margin) around the outside of an element.*/
    padding: 0; /*removes any default space (padding) inside an element, between the content and its border.*/
    box-sizing: border-box; /*The width and height include padding and border*/
}

body {
    overflow-x: hidden;
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    min-height: 100vh; /* will always take up at least the full height of the screen, even if the content inside it is less than that height.*/
}

.container {
    display: flex;/*It changes the behavior of all direct children of .container — they become flex items, and by default, they’ll line up horizontally in a row.*/
    width: 100%; /*means the element will stretch to take up 100% of the width of its parent container, It doesn’t mean 100% of the screen — it means 100% of the space its inside.*/
    min-height: 100vh; /*sets the element’s height to 100% of the viewport height (the visible part of the browser window).*/
}

.sidebar {
    background-color: white;
    width: 300px; 
    padding: 25px;
    display: flex;
    flex-direction: column; /* flex-direction: column; is used with display: flex to change the direction of flex items from the default horizontal row to a vertical column. */
    position: fixed; /*doesn’t move when you scroll.*/
    height: 100vh;
    z-index: 10; /*This controls the stacking order (which elements appear in front of others).*/
    overflow-y: auto; /* Keep vertical scrolling */
    overflow-x: hidden; /* Remove horizontal scrollbar */
}

.sidebar .logo img {
    width: 100%;
    max-width: 300px; 
    margin-bottom: 40px; /*creates a gap between the bottom of the current element and the next element below it, here adds 40 pixels of space below an element.*/
}

.menu {
    list-style: none; /*removes the default bullets or numbers from HTML lists*/
    width: 100%;
}

.menu li {
    margin-bottom: 12px;
}

.menu a {
    text-decoration: none; /*removes underlines (or other decorations) from text — most commonly used on links.*/
}

.menu button {
    display: flex;
    align-items: center; /*a Flexbox property used to vertically center items within a flex container*/
    font-size: 20px; /* controls how large the text inside the element appears*/
    font-weight: bold; /*increases the thickness of the text*/
    width: 100%;
    padding: 15px; /*Adds 15 pixels of space on all four sides (top, right, bottom, and left) inside the element, between the content (like text) and the element's border.*/
    color: #333; /*Sets the text color */
    background-color: #fff; /*Sets the background color of the element*/
    border: none; /* Removes any border around the element. It makes sure there's no border showing by default.*/
    cursor: pointer; /*Changes the mouse cursor to a hand pointer when hovering over the element, indicating it's clickable (like a button).*/
    text-align: left; /*Aligns the text inside the element to the left. If there’s more than one line of text, it will start from the left side.*/
    border-radius: 5px; /*Rounds the corners of the element with a radius of 5 pixels. This makes the edges of the element (like a button) appear curved rather than sharp.*/
    gap: 8px; /*Adds an 8-pixel space between items inside a flex container or grid. This only works if the element is a flexbox or grid container. It's useful for creating space between child elements.*/
}

.menu img {
    width: 40px;
    height: 40px;
    object-fit: contain; /*object-fit: contain; is a CSS property used to control how content (like an image or video) fits within its container, while maintaining its aspect ratio.*/
}

.menu button:hover {
    transform: scale(1.1); /*a CSS property used to scale an element by a specified factor., here increases the size of the element by 5%.*/
    background-color: #18A0FB;
    color: white;
}

.navbar {
    background-color: white;
    color: #18A0FB;
    padding: 10px 25px;
    position: fixed;
    right: 0; /*This positions the element 0 pixels from the right edge of its containing element,  it aligns the element's right side with the right edge of the container.*/
    left: 300px; /*This positions the element 300 pixels from the left edge of its containing element.*/
    z-index: 5;
    display: flex;
    justify-content: flex-end; /*a Flexbox property. It aligns the flex items (child elements of a flex container) at the end of the container along the main axis,here the child elements will move to the end of the container(far right if it's a row, bottom if it's a column)*/
    align-items: center;
    gap: 20px; 
    box-shadow: 0 2px 5px rgba(0,0,0,0.1); /*Adds a shadow effect to the element. box-shadow: offset-x offset-y blur-radius spread-radius color; */
    height: 100px;
}

.navbar a {
    color: #18A0FB;
    text-decoration: none;
    font-size: 20px;
    padding: 10px 15px;
    border-radius: 5px;
    display: flex;
}

.navbar a img {
    width: 35px;
    height: 35px;
}

.navbar img:hover {
    transform: scale(1.1); /*a CSS property used to scale an element by a specified factor., here increases the size of the element by 5%.*/
    color: white;
}

/* Calendar styles */
.calendar-dropdown {
    display: none;
    position: absolute;
    width: 360px;
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
    padding: 20px;
    z-index: 1000;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    transition: all 0.3s ease-in-out;
}

.calendar-dropdown h3 {
    margin: 0 0 12px 0;
    font-size: 22px;
    color: #1a1a1a;
    font-weight: 600;
}

.calendar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.calendar-header button {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 22px;
    color: #18A0FB;
    transition: color 0.2s ease;
}

.calendar-header button:hover {
    color: #0d8ce0;
}

#currentMonth {
    font-weight: 600;
    font-size: 20px;
    color: #333;
}

.weekdays {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    text-align: center;
    font-weight: 600;
    color: #888;
    margin-bottom: 10px;
    font-size: 14px;
}

.days {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 6px;
}

.days div {
    height: 36px;
    width: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    border-radius: 50%;
    position: relative;
    transition: background-color 0.2s ease, transform 0.2s ease;
    font-size: 14px;
    color: #333;
}

.days div:hover {
    background-color: #e9f5ff;
    transform: scale(1.05);
}

.days div.today {
    background-color: #18A0FB;
    color: #fff;
    font-weight: bold;
}

.days div.has-event::after {
    content: '';
    position: absolute;
    bottom: 4px;
    left: 50%;
    transform: translateX(-50%);
    width: 5px;
    height: 5px;
    background-color: #18A0FB;
    border-radius: 50%;
}

.calendar-footer {
    margin-top: 20px;
    padding-top: 16px;
    border-top: 1px solid #eee;
    text-align: center;
}

.calendar-link {
    color: #18A0FB;
    text-decoration: none;
    font-size: 14px;
    transition: all 0.2s ease;
    font-weight: 500;
}

.calendar-link:hover {
    text-decoration: underline;
    color: #0d8ce0;
}

.dot {
    color: #18A0FB;
    margin: 0 10px;
    font-size: 18px;
}


.logout:hover {
    transform: scale(1.1); /*a CSS property used to scale an element by a specified factor., here increases the size of the element by 5%.*/
    color: white;
    background-color: #0c8de4;
}

/*------------ Main content styling -----------*/
.main-content {
    margin-left: 250px; 
    padding: 110px 5px 10px 5px; 
    height: 100vh; 
    width: 100%; 
    box-sizing: border-box; 
    overflow: flex; 
}